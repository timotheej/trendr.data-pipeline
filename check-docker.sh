#!/bin/bash

# Script de diagnostic Docker pour Mac

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç DIAGNOSTIC DOCKER${NC}"
echo "==================="

# 1. V√©rifier si Docker est install√©
echo -e "${YELLOW}üìã V√©rification de l'installation Docker...${NC}"

if command -v docker &> /dev/null; then
    echo -e "${GREEN}‚úÖ Docker CLI install√©${NC}"
    docker --version
else
    echo -e "${RED}‚ùå Docker CLI non trouv√©${NC}"
    echo "Installer Docker Desktop depuis: https://www.docker.com/products/docker-desktop"
    exit 1
fi

# 2. V√©rifier si Docker Desktop est lanc√©
echo -e "${YELLOW}üìã V√©rification du daemon Docker...${NC}"

if docker info &> /dev/null; then
    echo -e "${GREEN}‚úÖ Docker daemon en cours d'ex√©cution${NC}"
    echo -e "   Conteneurs: $(docker ps --format 'table {{.Names}}' | wc -l | xargs)"
    echo -e "   Images: $(docker images -q | wc -l | xargs)"
else
    echo -e "${RED}‚ùå Docker daemon non d√©marr√©${NC}"
    echo ""
    echo -e "${YELLOW}üöÄ COMMENT D√âMARRER DOCKER :${NC}"
    echo ""
    echo "Sur Mac:"
    echo "1. üîç Chercher 'Docker' dans Spotlight (Cmd+Space)"
    echo "2. üñ±Ô∏è  Cliquer sur 'Docker Desktop'"
    echo "3. ‚è≥ Attendre que l'ic√¥ne Docker apparaisse dans la barre de menu"
    echo "4. ‚úÖ L'ic√¥ne doit √™tre blanche (pas grise)"
    echo ""
    echo "Ou bien:"
    echo "‚Ä¢ Ouvrir le Finder"
    echo "‚Ä¢ Aller dans Applications"
    echo "‚Ä¢ Double-cliquer sur Docker"
    echo ""
    echo -e "${BLUE}üí° Une fois Docker Desktop lanc√©, relancer ce script !${NC}"
    exit 1
fi

# 3. V√©rifier l'espace disque
echo -e "${YELLOW}üìã V√©rification de l'espace disque...${NC}"
docker_space=$(docker system df --format 'table {{.Size}}' 2>/dev/null | tail -n +2 | head -1 || echo "0B")
echo -e "${GREEN}‚úÖ Espace Docker utilis√©: ${docker_space}${NC}"

# 4. Test de fonctionnement
echo -e "${YELLOW}üìã Test de fonctionnement...${NC}"

if docker run --rm hello-world &> /dev/null; then
    echo -e "${GREEN}‚úÖ Docker fonctionne correctement !${NC}"
else
    echo -e "${RED}‚ùå Probl√®me avec Docker${NC}"
    echo "Essayer de red√©marrer Docker Desktop"
    exit 1
fi

# 5. V√©rification sp√©cifique Trendr
echo -e "${YELLOW}üìã Pr√©paration pour Trendr...${NC}"

# V√©rifier les r√©pertoires
if [ -d "logs" ] && [ -d "data" ]; then
    echo -e "${GREEN}‚úÖ R√©pertoires Trendr pr√©sents${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Cr√©ation des r√©pertoires Trendr...${NC}"
    mkdir -p logs data/cache data/reports data/backups
    echo -e "${GREEN}‚úÖ R√©pertoires cr√©√©s${NC}"
fi

# V√©rifier le fichier .env
if [ -f ".env" ]; then
    echo -e "${GREEN}‚úÖ Fichier .env pr√©sent${NC}"
    
    # V√©rifier les cl√©s
    if grep -q "your-" .env; then
        echo -e "${YELLOW}‚ö†Ô∏è  Certaines cl√©s API ne sont pas configur√©es${NC}"
    else
        echo -e "${GREEN}‚úÖ Cl√©s API configur√©es${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Fichier .env manquant${NC}"
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo -e "${YELLOW}üìù Fichier .env cr√©√© depuis le template${NC}"
        echo -e "${RED}üõë VOUS DEVEZ CONFIGURER VOS CL√âS API !${NC}"
    fi
fi

echo ""
echo -e "${GREEN}üéâ DOCKER EST PR√äT POUR TRENDR !${NC}"
echo ""
echo -e "${BLUE}üöÄ PROCHAINES √âTAPES :${NC}"
echo "1. Configurer le fichier .env avec vos cl√©s API"
echo "2. Lancer: ./docker-start.sh"
echo "3. Choisir option 3 pour construire les images"
echo "4. Choisir option 1 pour d√©marrer le syst√®me"